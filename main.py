import sqlite3

# Connect to the SQLite database (or create it if it doesn't exist)
connection = sqlite3.connect("PunchCardSystem.db")
cursor = connection.cursor()

cursor.execute("PRAGMA foreign_keys = ON;")

# Drop tables if they exist (SQLite doesn't support IF EXISTS in DROP statements)
tables = ["ChangeLog", "MilesLog", "WeekLog", "AbsenceRecord", "PunchRecord", "Employee"]
for table in tables:
    cursor.execute(f"DROP TABLE IF EXISTS {table}")

# Create the Employee table
cursor.execute("""
CREATE TABLE Employee (
    employee_id INTEGER PRIMARY KEY,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    username TEXT UNIQUE NOT NULL,
    password_hash TEXT NOT NULL,
    four_digit_code TEXT UNIQUE,
    employee_role TEXT NOT NULL
)
""")

# Create the dependent tables
cursor.execute("""
CREATE TABLE PunchRecord (
    punch_id TEXT PRIMARY KEY,
    employee_id INTEGER NOT NULL,
    week_id TEXT,
    record_date DATE,
    punch_in_time TIME,
    punch_out_time TIME,
    break_start_time TIME,
    break_end_time TIME,
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
)
""")

cursor.execute("""
CREATE TABLE AbsenceRecord (
    absence_id TEXT PRIMARY KEY,
    employee_id INTEGER NOT NULL,
    absence_type TEXT NOT NULL,
    absence_date DATE NOT NULL,
    notes TEXT,
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
)
""")

cursor.execute("""
CREATE TABLE MilesLog (
    miles_id TEXT PRIMARY KEY,
    employee_id INTEGER NOT NULL,
    week_id TEXT,
    miles_date DATE,
    miles_driven REAL,
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
)
""")

cursor.execute("""
CREATE TABLE WeekLog (
    week_id TEXT PRIMARY KEY,
    employee_id INTEGER NOT NULL,
    week_ending_day DATE NOT NULL,
    total_hours REAL NOT NULL,
    overtime REAL NOT NULL,
    weighted_hours REAL NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
)
""")

cursor.execute("""
CREATE TABLE ChangeLog (
    change_id INTEGER PRIMARY KEY AUTOINCREMENT,
    employee_id INTEGER NOT NULL,
    change_type TEXT NOT NULL,
    old_value TEXT,
    new_value TEXT,
    change_date DATE NOT NULL,
    change_time TIME NOT NULL,
    changed_by TEXT NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)
)
""")

# Insert data into the Employee table
employee_data = [
    (101, 'Felix', 'Bonilla', 'fbonilla76', '$2b$12$wmUljZJ4Xv0UwqSPHafF9uadgDDsSyxhSBJdYgZZi0O0v8QS3fQpG', '1234', 'Shop Worker'),
    (102, 'Walter', 'Ramos', 'wramos2007', '$2b$12$s2C7NDgEeNXuokfnI4ZkmuqsIW7kSPSS/9ZG9YsxOwL/8L772l95i', '5678', 'Installer'),
    (103, 'Eder', 'Uribe', 'euribe2023', '$2b$12$V6a3/j8YDCqmCnIZj.9nG.qVQI.KJgyCD3FtBbD.2LciDgg13FHUa', '9101', 'Shop Manager'),
    (104, 'Scott', 'Shannon', 'sshannon1030', '$2b$12$IqX.Y5fVHHDwxZlVMb.KBuw7S8mIR.WZR/7lMfu.1UwEwRtZZ05pa', '1121', 'Sales Lead'),
    (105, 'Olivia', 'Carter', 'ocarter92', '$2b$12$ik9KM17N6jpoqoHUQNA2T./rmA8Gmxg3uqzd3jMexqmsH.F0U.7FS', '3141', 'PT Office Administrator')
]
cursor.executemany("INSERT INTO Employee VALUES (?, ?, ?, ?, ?, ?, ?)", employee_data)

# Insert data into PunchRecord table
punch_record_data = [

    # Data for Employee 101
    ('45604-101', 101, '45606-101', '2024-11-08', '09:00:00', '12:00:00', NULL, NULL),
    ('45603-101', 101, '45606-101', '2024-11-07', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45602-101', 101, '45606-101', '2024-11-06', '06:31:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45601-101', 101, '45606-101', '2024-11-05', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45600-101', 101, '45606-101', '2024-11-04', '06:47:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45597-101', 101, '45599-101', '2024-11-01', '06:35:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45596-101', 101, '45599-101', '2024-10-31', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45595-101', 101, '45599-101', '2024-10-30', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45594-101', 101, '45599-101', '2024-10-29', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45590-101', 101, '45592-101', '2024-10-25', '07:11:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45589-101', 101, '45592-101', '2024-10-24', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45588-101', 101, '45592-101', '2024-10-23', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45587-101', 101, '45592-101', '2024-10-22', '06:37:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45586-101', 101, '45592-101', '2024-10-21', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45581-101', 101, '45585-101', '2024-10-16', '06:51:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45580-101', 101, '45585-101', '2024-10-15', '06:39:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45579-101', 101, '45585-101', '2024-10-14', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),

    # Data for Employee 102
    ('45604-102', 102, '45606-102', '2024-11-08', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45603-102', 102, '45606-102', '2024-11-07', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45602-102', 102, '45606-102', '2024-11-06', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45601-102', 102, '45606-102', '2024-11-05', '08:00:00', '16:30:00', '11:30:00', '12:00:00'),
    ('45600-102', 102, '45606-102', '2024-11-04', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45595-102', 102, '45599-102', '2024-10-30', '08:00:00', '16:30:00', '11:30:00', '12:00:00'),
    ('45594-102', 102, '45599-102', '2024-10-29', '08:30:00', '17:00:00', '11:30:00', '12:00:00'),
    ('45593-102', 102, '45599-102', '2024-10-28', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45590-102', 102, '45592-102', '2024-10-25', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45589-102', 102, '45592-102', '2024-10-24', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45588-102', 102, '45592-102', '2024-10-23', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45587-102', 102, '45592-102', '2024-10-22', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45586-102', 102, '45592-102', '2024-10-21', '09:00:00', '17:30:00', '11:30:00', '12:00:00'),
    ('45584-102', 102, '45585-102', '2024-10-19', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45583-102', 102, '45585-102', '2024-10-18', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45582-102', 102, '45585-102', '2024-10-16', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45581-102', 102, '45585-102', '2024-10-15', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45579-102', 102, '45585-102', '2024-10-14', '07:30:00', '16:00:00', '11:30:00', '12:00:00'),

	# Data for Employee 103
    ('45604-103', 103, '45606-103', '2024-11-08', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45603-103', 103, '45606-103', '2024-11-07', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45602-103', 103, '45606-103', '2024-11-06', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45601-103', 103, '45606-103', '2024-11-05', '06:50:00', '15:50:00', '11:30:00', '12:00:00'),
    ('45600-103', 103, '45606-103', '2024-11-04', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45597-103', 103, '45599-103', '2024-11-01', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45596-103', 103, '45599-103', '2024-10-31', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45595-103', 103, '45599-103', '2024-10-30', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45594-103', 103, '45599-103', '2024-10-29', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45593-103', 103, '45599-103', '2024-10-28', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45590-103', 103, '45592-103', '2024-10-25', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45589-103', 103, '45592-103', '2024-10-24', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45588-103', 103, '45592-103', '2024-10-23', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45587-103', 103, '45592-103', '2024-10-22', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45586-103', 103, '45592-103', '2024-10-21', '09:00:00', '17:00:00', '11:30:00', '12:00:00'),
    ('45585-103', 103, '45585-103', '2024-10-19', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45583-103', 103, '45585-103', '2024-10-18', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45581-103', 103, '45585-103', '2024-10-16', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45580-103', 103, '45585-103', '2024-10-15', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45579-103', 103, '45585-103', '2024-10-14', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),

    # Data for Employee 104
    ('45604-104', 104, '45606-104', '2024-11-08', '06:30:00', '15:00:00', '11:30:00', '12:00:00'),
    ('45603-104', 104, '45606-104', '2024-11-07', '06:30:00', '15:00:00', '11:30:00', '12:00:00'),
    ('45602-104', 104, '45606-104', '2024-11-06', '06:30:00', '15:00:00', '11:30:00', '12:00:00'),
    ('45601-104', 104, '45606-104', '2024-11-05', '06:30:00', '15:15:00', '11:30:00', '12:00:00'),
    ('45600-104', 104, '45606-104', '2024-11-04', '06:30:00', '16:00:00', '11:30:00', '12:00:00'),
    ('45590-104', 104, '45592-104', '2024-10-25', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45589-104', 104, '45592-104', '2024-10-24', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45588-104', 104, '45592-104', '2024-10-23', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45587-104', 104, '45592-104', '2024-10-22', '05:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45586-104', 104, '45592-104', '2024-10-21', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45585-104', 104, '45585-104', '2024-10-20', '06:30:00', '15:30:00', '11:30:00', '12:00:00'),

    # Data for Employee 105
    ('45604-105', 105, '45606-105', '2024-11-08', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45603-105', 105, '45606-105', '2024-11-07', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45602-105', 105, '45606-105', '2024-11-06', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45601-105', 105, '45606-105', '2024-11-05', '09:00:00', '15:50:00', '11:30:00', '12:00:00'),
    ('45600-105', 105, '45606-105', '2024-11-04', '09:00:00', '15:50:00', '11:30:00', '12:00:00'),
    ('45590-105', 105, '45592-105', '2024-10-25', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45589-105', 105, '45592-105', '2024-10-24', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45588-105', 105, '45592-105', '2024-10-23', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45587-105', 105, '45592-105', '2024-10-22', '08:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45586-105', 105, '45592-105', '2024-10-21', '09:00:00', '15:30:00', '11:30:00', '12:00:00'),
    ('45585-105', 105, '45585-105', '2024-10-20', '09:00:00', '15:30:00', '11:30:00', '12:00:00')

]
cursor.executemany("INSERT INTO PunchRecord VALUES (?, ?, ?, ?, ?, ?, ?, ?)", punch_record_data)

# Insert data into AbsenceRecord table
absence_record_data = [
    
    # Data for Employee 101
    ('45604-101', 101, 'Late', '2024-11-08', 'Employee had to help a family member move, just came in for catching up shop work'),
    ('45600-101', 101, 'Late', '2024-11-04', 'Employee showed up late, talked with him regarding attendance'),
    ('45626-101', 101, 'NC/NS', '2024-11-03', 'No Call No Show'),
    ('45590-101', 101, 'D-Day', '2024-10-25', 'Discretionary day'),
    ('45589-101', 101, 'SICK', '2024-10-19', 'Employees wife called in on behalf of him being sick'),
    ('45588-101', 101, 'SICK', '2024-10-18', 'Employees wife called in on behalf of him being sick'),

    # Data for Employee 102
    ('45601-102', 102, 'Late', '2024-11-05', 'Employee called in to let us know he is coming in late due to car troubles'),
    ('45597-102', 102, 'D-Day', '2024-11-01', 'Discretionary day'),
    ('45596-102', 102, 'D-Day', '2024-10-31', 'Discretionary day'),
    ('45594-102', 102, 'Late', '2024-10-30', 'Employee called in to let us know he is going to be late'),
    ('45592-102', 102, 'Late', '2024-10-24', 'Employee called in to let us know he is going to be late'),
    ('45586-102', 102, 'Late', '2024-10-21', 'Employee came in late Slept through alarm'),

    # Data for Employee 103
    ('45601-103', 103, 'Late', '2024-11-05', 'Employee called in that he was running behind due to traffic'),
    ('45594-103', 103, 'SICK', '2024-10-29', 'Employee called in sick with the flu'),
    ('45586-103', 103, 'Late', '2024-10-21', 'Employee called in that he cant come in until 9am'),

    # Data for Employee 104
    ('45597-104', 104, 'Vacation', '2024-11-01', 'Vacation Day'),
    ('45596-104', 104, 'Vacation', '2024-10-31', 'Vacation Day'),
    ('45595-104', 104, 'Vacation', '2024-10-30', 'Vacation Day'),
    ('45594-104', 104, 'Vacation', '2024-10-29', 'Vacation Day'),
    ('45593-104', 104, 'Vacation', '2024-10-28', 'Vacation Day'),
    ('45589-104', 104, 'Write Up', '2024-10-19', 'Theft of company time / A breach of trust / fraudulent reporting of hours'),

    # Data for Employee 105
    ('45589-105', 105, 'SICK', '2024-10-28', 'Employee called in that they need to come in later because of late night shift at second job, will make it up next day'),
    ('45586-105', 105, 'SICK', '2024-10-25', 'Employee called in sick: suspicious that they are calling out to extend weekend'),
    ('45585-105', 105, 'SICK', '2024-10-20', 'Employee called in sick on Friday'),
    ('45583-105', 105, 'Late', '2024-10-15', 'Employee called in that they need to come in later because of late night shift at second job, will make it up next two days')

]
cursor.executemany("INSERT INTO AbsenceRecord VALUES (?, ?, ?, ?, ?)", absence_record_data)

# Insert data into MilesLog table
miles_log_data = [
     
     # Data for Employee 101
    ('45604-101', 101, '45606-101', '2024-11-08', 110),
    ('45596-101', 101, '45599-101', '2024-10-31', 57),
    ('45590-101', 101, '45592-101', '2024-10-25', 113),
    ('45588-101', 101, '45592-101', '2024-10-24', 13),
    ('45580-101', 101, '45585-101', '2024-10-15', 53),

    # Data for Employee 102
    ('45589-102', 102, '45592-102', '2024-10-24', 11),

    # Data for Employee 103
    ('45604-103', 103, '45606-103', '2024-11-08', 79),
    ('45603-103', 103, '45606-103', '2024-11-07', 151),
    ('45597-103', 103, '45606-103', '2024-11-01', 57),
    ('45596-103', 103, '45599-103', '2024-10-30', 33),
    ('45594-103', 103, '45592-103', '2024-10-25', 37),
    ('45592-103', 103, '45592-103', '2024-10-24', 35),
    ('45588-103', 103, '45585-103', '2024-10-21', 196),
    ('45580-103', 103, '45585-103', '2024-10-15', 91),
    ('45579-103', 103, '45585-103', '2024-10-14', 64),

    # Data for Employee 104
    ('45604-104', 104, '45606-104', '2024-11-08', 67),
    ('45603-104', 104, '45606-104', '2024-11-07', 32),
    ('45602-104', 104, '45606-104', '2024-11-06', 35),
    ('45601-104', 104, '45606-104', '2024-11-05', 78),
    ('45600-104', 104, '45606-104', '2024-11-04', 41),
    ('45590-104', 104, '45592-104', '2024-10-25', 75),
    ('45589-104', 104, '45592-104', '2024-10-24', 79),
    ('45587-104', 104, '45592-104', '2024-10-23', 72),
    ('45584-104', 104, '45592-104', '2024-10-22', 70),
    ('45583-104', 104, '45585-104', '2024-10-21', 61),
    ('45580-104', 104, '45585-104', '2024-10-19', 75),
    ('45558-104', 104, '45585-104', '2024-10-18', 33),
    ('45555-104', 104, '45585-104', '2024-10-16', 35),
    ('45550-104', 104, '45585-104', '2024-10-15', 51),
    ('45547-104', 104, '45585-104', '2024-10-14', 61),

    # Data for Employee 105
    ('45601-105', 105, '45606-105', '2024-11-08', 14),
    ('45595-105', 105, '45599-105', '2024-10-31', 17)
]
cursor.executemany("INSERT INTO MilesLog VALUES (?, ?, ?, ?, ?)", miles_log_data)

# Insert data into WeekLog table
week_log_data = [
    
    # Data for Employee 101
    ('45606-101', 101, '2024-11-10', 37.21, 2.21, 38.32),
    ('45599-101', 101, '2024-11-03', 33.87, 1.87, 34.81),
    ('45592-101', 101, '2024-10-27', 42.21, 2.39, 43.41),
    ('45585-101', 101, '2024-10-20', 25, 0, 25.5),
    
    # Data for Employee 102
    ('45606-102', 102, '2024-11-10', 40, 0, 40),
    ('45599-102', 102, '2024-11-03', 24, 0, 24),
    ('45592-102', 102, '2024-10-27', 40, 0, 40),
    ('45585-102', 102, '2024-10-20', 40, 0, 40),
    
    # Data for Employee 103
    ('45606-103', 103, '2024-11-10', 42.5, 2.5, 43.75),
    ('45599-103', 103, '2024-11-03', 34, 0, 35),
    ('45592-103', 103, '2024-10-27', 41.5, 0, 42.5),
    ('45585-103', 103, '2024-10-20', 42.5, 2.5, 43.75),
    
    # Data for Employee 104
    ('45606-104', 104, '2024-11-10', 41.25, 1.25, 41.88),
    ('45599-104', 104, '2024-11-03', 43.5, 3.5, 45.25),
    ('45592-104', 104, '2024-10-27', 0, 0, 0),
    ('45585-104', 104, '2024-10-20', 42.5, 2.5, 43.75),
    
    # Data for Employee 105
    ('45606-105', 105, '2024-11-10', 24, 0, 24),
    ('45599-105', 105, '2024-11-03', 30, 0, 30),
    ('45592-105', 105, '2024-10-27', 24, 0, 24),
    ('45585-105', 105, '2024-10-20', 24, 0, 24)
]
cursor.executemany("INSERT INTO WeekLog VALUES (?, ?, ?, ?, ?, ?)", week_log_data)

# Insert data into ChangeLog table
change_log_data = [
    
    (104, 'time', '10/14/2024 6:47', '10/14/2024 6:35', '2024-10-14', '7:15', 'sshannon1030'),
    (104, 'time', '10/14/2024 6:35', '10/14/2024 6:30', '2024-10-14', '14:57', 'sshannon1030'),
    (104, 'time', '10/15/2024 6:57', '10/15/2024 6:30', '2024-10-15', '7:00', 'sshannon1030'),
    (104, 'time', '10/18/2024 6:34', '10/18/2024 6:30', '2024-10-18', '6:35', 'sshannon1030'),
    (104, 'time', '10/19/2024 6:36', '10/19/2024 6:30', '2024-10-19', '11:13', 'sshannon1030'),
    (105, 'time', '10/17/2024 NULL', '10/17/2024 15:00', '2024-10-17', '14:00', 'ocarter69'),
    (105, 'username', 'ocarter69', 'ocarter92', '2024-10-19', '14:00', 'ocarter69'),
    (105, 'time', 'NULL', '10/17/2024 16:00', '2024-11-05', '9:45', 'ocarter92')
]
cursor.executemany("INSERT INTO ChangeLog (employee_id, change_type, old_value, new_value, change_date, change_time, changed_by) VALUES (?, ?, ?, ?, ?, ?, ?)", change_log_data)

for row in cursor.execute("SELECT * FROM Employee"):
    print(row)



# Commit changes and close the connection
connection.commit()
connection.close()
